type Tag {
    id: ID!
    name: String!
    count: Int!
    hidden: Boolean
}

type Question {
    id: ID!
    question: String!
    answer: String
    companies: [Company]
    roles: [Role]
    tags: [Tag]
    difficulty: Int
    frequentlyAsked: Int

    hidden: Boolean
    draft: Boolean
    createdTime: String
    updatedTime: String
}

type Role {
    id: ID!
    name: String!
    description: String
    companies: [Company]
    questions: [Question]
    tags: [Tag]
    difficulty: Int

    hidden: Boolean
    draft: Boolean
    createdTime: String
    updatedTime: String
}

type Company {
    id: ID!
    icon: String
    name: String!
    description: String
    roles: [Role]
    questions: [Question]
    tags: [Tag]
    questionCount: Int

    hidden: Boolean
    draft: Boolean
    createdTime: String
    updatedTime: String
}

type Query {
  allTags: [Tag]
  #allQuestions: [Question]
  #allRoles: [Role]
  #allCompanies: [Company]
}

type Mutation {
  createTag(name: String!, count: Int!): Tag
}

schema {
  query: Query
  mutation: Mutation
}